package org.yeastrc.proxl.xml.xlinkx.database;

import java.math.BigDecimal;

/**
 * A cross-linked PSM as represented in the sqlite file generated by PD
 * Note: only contains fields I need for proxl processing
 */
public class PsmDTO {

    public PsmDTO(int id, String sequenceA, int peptidePositionA, int numberMatchesA, BigDecimal ptmScoreA, BigDecimal sequenceCoverageA, String modificationConnectionsA, String sequenceB, int peptidePositionB, int numberMatchesB, BigDecimal ptmScoreB, BigDecimal sequenceCoverageB, String modificationConnectionsB, String spectrumFilePath, String crosslinkReagent, int scanNumber, BigDecimal retentionTime, BigDecimal precursorMz, int precursorChargeState, BigDecimal reporterScore, BigDecimal score, BigDecimal scoreDifference, BigDecimal deltaMass, BigDecimal fractionIonsMatchedBSeries, BigDecimal fractionIonsMatchedYSeries, BigDecimal fragmentationEfficiency, BigDecimal percolatorSVMScore, BigDecimal percolatorPValue, BigDecimal percolatorQValue, BigDecimal percolatorPEP, BigDecimal validatorQValue) {
        this.id = id;
        this.sequenceA = sequenceA;
        this.peptidePositionA = peptidePositionA;
        this.numberMatchesA = numberMatchesA;
        this.ptmScoreA = ptmScoreA;
        this.sequenceCoverageA = sequenceCoverageA;
        ModificationConnectionsA = modificationConnectionsA;
        this.sequenceB = sequenceB;
        this.peptidePositionB = peptidePositionB;
        this.numberMatchesB = numberMatchesB;
        this.ptmScoreB = ptmScoreB;
        this.sequenceCoverageB = sequenceCoverageB;
        ModificationConnectionsB = modificationConnectionsB;
        SpectrumFilePath = spectrumFilePath;
        this.crosslinkReagent = crosslinkReagent;
        this.scanNumber = scanNumber;
        this.retentionTime = retentionTime;
        this.precursorMz = precursorMz;
        this.precursorChargeState = precursorChargeState;
        this.reporterScore = reporterScore;
        this.score = score;
        this.scoreDifference = scoreDifference;
        this.deltaMass = deltaMass;
        this.fractionIonsMatchedBSeries = fractionIonsMatchedBSeries;
        this.fractionIonsMatchedYSeries = fractionIonsMatchedYSeries;
        this.fragmentationEfficiency = fragmentationEfficiency;
        this.percolatorSVMScore = percolatorSVMScore;
        this.percolatorPValue = percolatorPValue;
        this.percolatorQValue = percolatorQValue;
        this.percolatorPEP = percolatorPEP;
        this.validatorQValue = validatorQValue;
    }

    public int getId() {
        return id;
    }

    public String getSequenceA() {
        return sequenceA;
    }

    public int getPeptidePositionA() {
        return peptidePositionA;
    }

    public int getNumberMatchesA() {
        return numberMatchesA;
    }

    public BigDecimal getPtmScoreA() {
        return ptmScoreA;
    }

    public BigDecimal getSequenceCoverageA() {
        return sequenceCoverageA;
    }

    public String getModificationConnectionsA() {
        return ModificationConnectionsA;
    }

    public String getSequenceB() {
        return sequenceB;
    }

    public int getPeptidePositionB() {
        return peptidePositionB;
    }

    public int getNumberMatchesB() {
        return numberMatchesB;
    }

    public BigDecimal getPtmScoreB() {
        return ptmScoreB;
    }

    public BigDecimal getSequenceCoverageB() {
        return sequenceCoverageB;
    }

    public String getModificationConnectionsB() {
        return ModificationConnectionsB;
    }

    public String getSpectrumFilePath() {
        return SpectrumFilePath;
    }

    public String getCrosslinkReagent() {
        return crosslinkReagent;
    }

    public int getScanNumber() {
        return scanNumber;
    }

    public BigDecimal getRetentionTime() {
        return retentionTime;
    }

    public BigDecimal getPrecursorMz() {
        return precursorMz;
    }

    public int getPrecursorChargeState() {
        return precursorChargeState;
    }

    public BigDecimal getReporterScore() {
        return reporterScore;
    }

    public BigDecimal getScore() {
        return score;
    }

    public BigDecimal getScoreDifference() {
        return scoreDifference;
    }

    public BigDecimal getDeltaMass() {
        return deltaMass;
    }

    public BigDecimal getFractionIonsMatchedBSeries() {
        return fractionIonsMatchedBSeries;
    }

    public BigDecimal getFractionIonsMatchedYSeries() {
        return fractionIonsMatchedYSeries;
    }

    public BigDecimal getFragmentationEfficiency() {
        return fragmentationEfficiency;
    }

    public BigDecimal getPercolatorSVMScore() {
        return percolatorSVMScore;
    }

    public BigDecimal getPercolatorPValue() {
        return percolatorPValue;
    }

    public BigDecimal getPercolatorQValue() {
        return percolatorQValue;
    }

    public BigDecimal getPercolatorPEP() {
        return percolatorPEP;
    }

    public BigDecimal getValidatorQValue() {
        return validatorQValue;
    }

    private int id;

    private String sequenceA;
    private int peptidePositionA;
    private int numberMatchesA;
    private BigDecimal ptmScoreA;
    private BigDecimal sequenceCoverageA;
    private String ModificationConnectionsA;

    private String sequenceB;
    private int peptidePositionB;
    private int numberMatchesB;
    private BigDecimal ptmScoreB;
    private BigDecimal sequenceCoverageB;
    private String ModificationConnectionsB;

    private String SpectrumFilePath;
    private String crosslinkReagent;
    private int scanNumber;
    private BigDecimal retentionTime;
    private BigDecimal precursorMz;
    private int precursorChargeState;

    private BigDecimal reporterScore;
    private BigDecimal score;
    private BigDecimal scoreDifference;
    private BigDecimal deltaMass;

    private BigDecimal fractionIonsMatchedBSeries;
    private BigDecimal fractionIonsMatchedYSeries;
    private BigDecimal fragmentationEfficiency;

    private BigDecimal percolatorSVMScore;
    private BigDecimal percolatorPValue;
    private BigDecimal percolatorQValue;
    private BigDecimal percolatorPEP;

    private BigDecimal validatorQValue;
}
